"""Add missing health data fields

Revision ID: 02caa9073d27
Revises: 
Create Date: 2025-09-06 16:02:45.481234

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '02caa9073d27'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ai_health_advice')
    op.drop_table('personalized_advice')
    with op.batch_alter_table('health_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('calories_consumed', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('protein_grams', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('carbs_grams', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('fat_grams', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('fiber_grams', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('systolic_bp', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('diastolic_bp', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('bmi', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('meditation_minutes', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('screen_time_hours', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('social_interactions', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))

    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.drop_column('google_calendar_refresh_token')
        batch_op.drop_column('google_calendar_last_sync')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.add_column(sa.Column('google_calendar_last_sync', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('google_calendar_refresh_token', sa.TEXT(), nullable=True))

    with op.batch_alter_table('health_data', schema=None) as batch_op:
        batch_op.drop_column('notes')
        batch_op.drop_column('social_interactions')
        batch_op.drop_column('screen_time_hours')
        batch_op.drop_column('meditation_minutes')
        batch_op.drop_column('bmi')
        batch_op.drop_column('diastolic_bp')
        batch_op.drop_column('systolic_bp')
        batch_op.drop_column('fiber_grams')
        batch_op.drop_column('fat_grams')
        batch_op.drop_column('carbs_grams')
        batch_op.drop_column('protein_grams')
        batch_op.drop_column('calories_consumed')

    op.create_table('personalized_advice',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('insights', sa.TEXT(), nullable=True),
    sa.Column('recommendations', sa.TEXT(), nullable=True),
    sa.Column('quick_wins', sa.TEXT(), nullable=True),
    sa.Column('concerns', sa.TEXT(), nullable=True),
    sa.Column('motivation', sa.TEXT(), nullable=True),
    sa.Column('source', sa.VARCHAR(length=50), nullable=True),
    sa.Column('health_score_at_generation', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ai_health_advice',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('insights', sa.TEXT(), nullable=True),
    sa.Column('recommendations', sa.TEXT(), nullable=True),
    sa.Column('quick_wins', sa.TEXT(), nullable=True),
    sa.Column('concerns', sa.TEXT(), nullable=True),
    sa.Column('motivation', sa.TEXT(), nullable=True),
    sa.Column('source', sa.VARCHAR(length=50), nullable=True),
    sa.Column('generated_at', sa.DATETIME(), nullable=True),
    sa.Column('health_score_basis', sa.FLOAT(), nullable=True),
    sa.Column('data_points_count', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###
